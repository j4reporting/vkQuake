name: Windows arm64 CI (mingw)

on: [push, pull_request]

jobs:
  build-mingw:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    defaults:
      run:
        shell: ${{ matrix.platform.shell }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows (clangarm64),  os: windows-11-arm, shell: 'msys2 {0}', msystem: clangarm64, msys-env: mingw-w64-clang-aarch64, makefile: Makefile.wA64 }

    steps:
    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.platform.msystem }}
        install: base-devel 
            coreutils
          ${{ matrix.platform.msys-env }}-gcc-compat
          ${{ matrix.platform.msys-env }}-glslang
          ${{ matrix.platform.msys-env }}-vulkan-headers
          ${{ matrix.platform.msys-env }}-opus
          ${{ matrix.platform.msys-env }}-opusfile
          ${{ matrix.platform.msys-env }}-mpg123
          ${{ matrix.platform.msys-env }}-SDL2
          ${{ matrix.platform.msys-env }}-flac
          ${{ matrix.platform.msys-env }}-libmad
          ${{ matrix.platform.msys-env }}-libogg
          ${{ matrix.platform.msys-env }}-libvorbis
          ${{ matrix.platform.msys-env }}-libxmp
                    
    - uses: actions/checkout@v4

    - name: Build MinGW
      run: |
        set -eu
        parallel="$(getconf _NPROCESSORS_ONLN)"
        make -j"${parallel}" -C Quake -f ${{ matrix.platform.makefile }} all
    - name: Upload vkQuake
      uses: actions/upload-artifact@v4
      with:
        name: vkQuake archive (${{ matrix.platform.msystem }})
        path: |
            Quake/*.exe
            Quake/*.dll
